version: 2
jobs:
  install:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: yarn
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
  pkg-ok:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn
      - run: yarn pkg-ok
  lint:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - run: yarn lint
  test:
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - run: yarn test
  test6:
    docker:
      - image: circleci/node:6
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - run: yarn test
  testNext:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - run: yarn test
  audit:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - run: |
          npm i --package-lock-only
          npm audit
  publish:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - run: |
          printf "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
          echo -e "$NPM_USERNAME\n$NPM_EMAIL\n" | yarn login
          SEMVER=$(echo "$CIRCLE_TAG" | cut -c2-)
          yarn publish --new-version $SEMVER

workflows:
  version: 2
  build_lint_test:
    jobs:
      - install:
          filters:
            tags:
              only: /^v.*/
      - pkg-ok: 
          requires:
            - install
          filters:
            tags:
              only: /^v.*/
      - lint:
          requires:
            - install
          filters:
            tags:
              only: /^v.*/
      - test:
          requires:
            - install
          filters:
            tags:
              only: /^v.*/
      - test6:
          requires:
            - install
          filters:
            tags:
              only: /^v.*/
      - testNext:
          requires:
            - install
          filters:
            tags:
              only: /^v.*/
      - audit:
          requires:
            - install
          filters:
            tags:
              only: /^v.*/
      - publish:
          requires:
            - install
            - pkg-ok 
            - lint
            - test
            - test6
            - testNext
            - audit
          filters:
            branches:
              ignore: /.*/
            # only act on version tags
            tags:
              only: /^v.*/
